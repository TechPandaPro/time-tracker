html {
  height: 100%;
}

body {
  /* font-family: Arial, Helvetica, sans-serif; */
  /* font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif; */
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  color: rgb(255 255 255);
  background-color: rgb(20 20 20);
  margin: 0;
  padding: 30px;
  box-sizing: border-box;
  min-height: 100%;
}

h1 {
  /* margin-top: 0;
  margin-bottom: 0; */
  margin: 0;
}

.slogan {
  /* margin: 0.4em 0; */
  font-size: 1.05em;
  font-style: italic;
}

h2 {
  margin-bottom: 0.4em;
}

button {
  padding: 4px 8px;
  border-radius: 5px;
  color: inherit;
  font: inherit;
  font-size: 0.85em;
  border: 2px solid rgb(60 60 60);
  background-color: rgb(30 30 30);
  /* cursor: pointer; */
  transition: border-color 0.1s, background-color 0.1s, color 0.1s, opacity 0.1s;
}

button:enabled {
  cursor: pointer;
}

button:enabled:hover {
  border-color: rgb(70 70 70);
  background-color: rgb(40 40 40);
}

button:disabled {
  color: rgb(127 127 127);
  /* border-color: rgb(50 50 50); */
  opacity: 0.8;
  /* cursor: not-allowed; */
}

.customSelectHidden {
  display: none;
}

.customSelect {
  position: relative;
  max-width: 250px;
}

.customSelect:not(.expanded) .customSelectDropdown {
  visibility: hidden;
}

.customSelectButton,
.customSelectDropdown {
  border-radius: 6px;
}

.customSelectButton {
  cursor: pointer;
  background-color: rgb(35 35 35);
  /* border: 2px solid white; */
  border: none;
  font: inherit;
  font-size: 0.9em;
  /* border-radius: 4px; */
  color: inherit;
  padding: 6px 10px;
  border: 1px solid rgb(30 30 30);
  /* border-radius: 6px; */
}

.customSelect.expanded .customSelectButton {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  /* border-radius: 6px 6px 0 0; */
}

.customSelectButton img,
.customSelectButton span,
.customSelectOption label img,
.customSelectOption label span {
  vertical-align: middle;
  line-height: 16px;
}

.customSelectButton img,
.customSelectOption label img {
  margin-right: 4px;
}

.customSelectButton span,
.customSelectOption label span {
  word-break: break-word;
}

.customSelectButton::after {
  content: "";
  position: absolute;
  /* background-color: red; */
  /* height: 50px; */
  border-style: solid;
  border-width: 6px 6px 0 6px;
  border-color: rgb(255 255 255) transparent transparent transparent;
  /* border: 8px solid rgb(255 255 255); */
  /* width: 50px; */
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
}

.customSelect.expanded .customSelectButton::after {
  transform: translateY(-50%) rotate(180deg);
}

.customSelectButton,
.customSelectDropdown {
  width: 100%;
  box-sizing: border-box;
  text-align: left;
}

.customSelectDropdown {
  position: absolute;
  padding: 0;
  margin: 0;
  /* border: 2px solid rgb(60 60 60); */
  background-color: rgb(30 30 30);
  max-height: 150px;
  overflow-y: auto;
  padding: 6px;
  scrollbar-width: thin;
  scrollbar-color: rgb(127 127 127) transparent;
  z-index: 10;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.customSelectDropdown li,
.customSelectDropdown li label {
  cursor: pointer;
}

.customSelectDropdown li label {
  display: block;
  height: 100%;
  padding: 6px 10px;
  /* background-color: blue; */
  border-radius: 6px;
  font-size: 0.85em;
}

.customSelectDropdown li + li {
  margin-top: 4px;
}

.customSelectDropdown li {
  /* background-color: rgb(40 40 40); */
  list-style-type: none;
  /* padding: 8px 12px; */
  /* border-radius: 6px; */
  /* background-color: rgb(30 30 30); */
  /* cursor: pointer; */
}

.customSelectDropdown li label:hover {
  /* background-color: rgb(50 50 50); */
  background-color: rgb(40 40 40);
}

.customSelectOption input {
  opacity: 0;
  /* visibility: hidden; */
  position: absolute;
  left: 0;
  /* display: none; */
}

.customSelectOption input:checked ~ label {
  /* background-color: red; */
  background-color: rgb(50 50 50);
  font-weight: bold;
}

/* .customSelectButton:focus, */
.customSelectOption input:focus ~ label {
  /* border: 2px solid red; */
  outline: 5px auto -webkit-focus-ring-color;
}

/* .focuses {
  background-color: red;
} */

.currentFocusLabel {
  font-style: italic;
  color: rgb(180 180 180);
  font-size: 0.9em;
  margin-bottom: 3px;
}

div + .currentFocusLabel {
  margin-top: 6px;
}

.currentFocusTip {
  /* font-style: italic; */
  /* font-weight: bold; */
  /* color: rgb(200 200 200); */
  color: rgb(160 160 160);
  max-width: 430px;
  font-size: 0.8em;
  margin-left: 5px;
  margin-top: 5px;
}

.currentFocusTipLabel {
  font-style: italic;
}

.currentFocusTimeSection {
  margin-top: 4px;
}

.currentFocusTimeLabel {
  font-style: italic;
}

.currentFocusTitle {
  display: flex;
  gap: 6px;
}

.currentFocusName {
  font-weight: bold;
}

.timerButtons {
  display: flex;
  gap: 5px;
  /* margin-top: 6px; */
}

.focusesContainer {
  overflow-x: auto;
  /* max-width: 80%; */
}

.focuses {
  text-align: left;
  max-width: 100%;
}

.focuses th,
.focuses td {
  padding: 3px 7px;
}

/* .focusIcon {
  position: relative;
} */

.focusIcon > img {
  cursor: pointer;
  vertical-align: middle;
  width: 16px;
  height: 16px;
}

.focusSelect {
  display: flex;
  /* display: grid; */
  /* grid-template-columns: repeat(3, 1fr); */
  position: absolute;
  background-color: rgb(60 60 60);
  padding: 6px 7px;
  /* top: 100%; */
  gap: 5px;
  z-index: 1;
  border-radius: 6px;
  transform: translateY(10px);
}

.focusSelect::before {
  content: "";
  position: absolute;
  /* background-color: blue; */
  width: 0px;
  height: 0px;
  border-width: 0 6px 10px 6px;
  border-style: solid;
  border-color: transparent transparent rgb(60 60 60) transparent;
  top: 2px;
  left: 2px;
  /* transform: translateY(-100%) scaleY(-100%) rotate(-45deg); */
  transform: translateY(-100%);
  /* border: 3px solid red; */
}

.focusSelectItem {
  display: flex;
  background-color: transparent;
  padding: 0px;
  border: none;
  cursor: pointer;
  transition: opacity 0.1s;
}

.focusSelectItem:hover {
  opacity: 0.8;
}

/* TODO: consider setting svg color in files instead of CSS */
.focusSelectItem img {
  /* color: rgb(255 255 255); */
  /* filter: invert(1); */
  width: 20px;
  height: 20px;
}

.focusName,
.dailyGoal {
  position: relative;
}

.focusName::after,
.dailyGoal::after {
  content: "";
  background-color: rgb(255 255 255 / 0.5);
  border-radius: 999px;
  position: absolute;
  height: 2px;
  left: 50%;
  /* bottom: 2px; */
  bottom: 0;
  transform: translateX(-50%);
  /* width: 95%; */
  width: calc(100% - 10px);
  opacity: 0;
  transition: opacity 0.1s;
}

.focusName:hover::after,
.dailyGoal:hover::after {
  opacity: 0.7;
  /* background-color: gray; */
  /* height: 2px;
  bottom: 0; */
}

.focusName:focus-within::after,
.dailyGoal:focus-within::after {
  opacity: 1;
  /* background-color: gray; */
  /* height: 2px;
  bottom: 0; */
}

.focusName input,
.dailyGoal input {
  background-color: transparent;
  color: inherit;
  border: none;
  outline: none;
  font: inherit;
  padding: 0;
  margin: 0;
}

.focusName input {
  /* min-width: 100%; */
  /* min-width: max(100px, 100%); */
  /* width: 100%; */
  min-width: 100%;
  max-width: 500px;
  text-overflow: ellipsis;
}

.dailyGoalWrapper {
  position: relative;
}

/* .dailyGoal div { */
.dailyGoalUnit {
  position: absolute;
  cursor: pointer;
  user-select: none;
  /* pointer-events: none; */
  top: 50%;
  transform: translateY(-50%);
}

.dailyGoalUnit:hover {
  opacity: 0.85;
}

/*
.dailyGoal div::after {
  pointer-events: none;
  right: 0;
  position: absolute;
}

.dailyGoal div:hover::after,
.dailyGoal div:focus-within::after {
  right: 1em;
}

* .dailyGoal input[data-unit="hours"]::after { *
.dailyGoal div[data-unit="hours"]::after {
  content: "hours";
  * background-color: red; *
}

.dailyGoal div[data-unit="minutes"]::after {
  content: "minutes"; *
}*/

.dailyGoal input {
  width: 115px;
}

.deleteFocus button {
  cursor: pointer;
  background-color: transparent;
  border: none;
  transition: opacity 0.1s;
}

.deleteFocus button img {
  width: 16px;
  height: 16px;
}

/* TODO: maybe disable delete button when there's only 1 focus left */
.deleteFocus button:hover {
  opacity: 0.8;
}

.focuses + .newFocus {
  margin-top: 5px;
}

/* .newFocus {
  padding: 4px 8px;
  border-radius: 5px;
  color: inherit;
  font: inherit;
  font-size: 0.85em;
  border: 2px solid rgb(60 60 60);
  background-color: rgb(30 30 30);
  cursor: pointer;
  transition: border-color 0.1s, background-color 0.1s;
}

.newFocus:hover {
  border-color: rgb(70 70 70);
  background-color: rgb(40 40 40);
} */
